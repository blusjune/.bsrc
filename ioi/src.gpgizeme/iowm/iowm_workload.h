#ifndef _IOWM_WORKLOAD_H_
#define  _IOWM_WORKLOAD_H_




/*
 * -------------------------------------------------------------------------------------------------
 * iowm_workload.h
 * --
 * I/O Workload Management
 * --
 * Brian M. JUNG <brian.m.jung@{gmail.com, samsung.com}>
 * 20121005_192749 (c)
 * -------------------------------------------------------------------------------------------------
 */ 




#include "iowm.h"




#define WORKLOAD_IOP_NUM 4
iop_st iop_conf_data[] = {

	{ /* I/O pattern 1:
	   * 25%, Read.Sequential, 0~, +1024
	   */
		(void *)0,			/* .iow */
		250,				/* .share */
		{ /* .a_ptrn */
			0x11,			/* .a_ptrn.type */
			IOWM_A_PTRN__READ_SEQN,	/* .a_ptrn.type_str */
			&ioop_read_seqn		/* .a_ptrn.ioop_f */
		},
		{ /* .as_range */
			0,			/* .as_range.offset */
			1024			/* .as_range.length */
		},
		{ /* .v_dist[] */
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			500, 10, 20, 30, 40, 50, 60, 70, 80, 90, 50, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		}
	},

	{ /* I/O pattern 2:
	   * 25%, Read.Random, 1024~, +1024
	   */
		(void *)0,			/* .iow */
		250,				/* .share */
		{ /* .a_ptrn */
			0x12,			/* .a_ptrn.type */
			IOWM_A_PTRN__READ_RAND,	/* .a_ptrn.type_str */
			&ioop_read_rand		/* .a_ptrn.ioop_f */
		},
		{ /* .as_range */
			1024,			/* .as_range.offset */
			1024			/* .as_range.length */
		},
		{ /* .v_dist[] */
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			500, 10, 20, 30, 40, 50, 60, 70, 80, 90, 50, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		}
	},

	{ /* I/O pattern 3:
	   * 25%, Write.Sequential, 2048~, +1024
	   */
		(void *)0,			/* .iow */
		250,				/* .share */
		{ /* .a_ptrn */
			0x21,			/* .a_ptrn.type */
			IOWM_A_PTRN__WRIT_SEQN,	/* .a_ptrn.type_str */
			&ioop_writ_seqn		/* .a_ptrn.ioop_f */
		},
		{ /* .as_range */
			2048,			/* .as_range.offset */
			1024			/* .as_range.length */
		},
		{ /* .v_dist[] */
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			20, 10, 20, 30, 40, 50, 60, 70, 80, 90, 10, 0, 0, 0, 0, 0,

			0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
			10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0,
			0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
			10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		}
	},

	{ /* I/O pattern 4:
	   * 25%, Write.Random, 3072~, +1024
	   */
		(void *)0,			/* .iow */
		250,				/* .share */
		{ /* .a_ptrn */
			0x22,			/* .a_ptrn.type */
			IOWM_A_PTRN__WRIT_RAND,	/* .a_ptrn.type_str */
			&ioop_writ_rand		/* .a_ptrn.ioop_f */
		},
		{ /* .as_range */
			3072,			/* .as_range.offset */
			1024			/* .as_range.length */
		},
		{ /* .v_dist[] */
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			20, 10, 20, 30, 40, 50, 60, 70, 80, 90, 10, 0, 0, 0, 0, 0,

			0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
			10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0,
			0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
			10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		},
	},

}; /* iop_st iop_conf_data[] */




#if 0
		{
			&ioop_read_seqn		/* 0x11 */
			&ioop_read_rand		/* 0x12 */
			&ioop_writ_seqn		/* 0x21 */
			&ioop_writ_rand		/* 0x22 */
		}
#endif




#endif /* _IOWM_WORKLOAD_H_ */
